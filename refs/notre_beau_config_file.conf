http {
	listen 127.0.0.1:80; // for listen_socket
	error_page 404 /404.html;

	server {
		listen					1.2.3.4:80;
		server_name				google.com; //compare with Host field in header for routing
		client_max_body_size	60m;
		root					/etc/www;
	}

	server {
		listen					1.2.3.4:40;						// ROUTING DATA -- ONLY ONE
		server_name				bulgaria.com www.bulgra.com;	// ROUTING DATA -- ZERO OR MORE
		client_max_body_size	60m;
		root					/tmp/www;

		location1	/www {										// ROUTING DATA (MUST BE UNIQUE)
			root				/tmp/www;
			allowed_methods		GET;
		}

		location2	/www/php {
			root				/tmp/php;
			allowed_methods		GET POST;
		}
	}
}
 ===> Creation des routes
[
	route0 {
		listen					1.2.3.4:80
		server_name				google.com
		client_max_body_size	10k
		location				/www
		root					/etc/www
	}

	route1 {
		listen					1.2.3.4:40
		server_name				www.bulgaria.com
		client_max_body_size	60m
		location				/www
		root					/tmp/www
		allowed_methods			[GET]
	}

	route2 {
		listen					1.2.3.4:40
		server_name				www.bulgaria.com
		client_max_body_size	60m
		location				/www/php
		root					/tmp/php
		allowed_methods			[GET, POST]
	}
]

===> Exemple de routing:

Socket on 1.2.3.4:40
<<<
	GET /www/lol HTTP1.1
	Host: www.bulgaria.com
	...
	[body]
>>>

router_map[{1.2.3.4, 40}]["bulgaria.com/www/lol"] -> route2
router_map[{1.2.3.4, 40}]["www.bulgaria.com/www/lol"] -> route2
router_map[{ip_addr, port}][ server_name + location ]


router_map[{1.2.3.4, 40}]["www.bulgaria.com/yooo"] -> route2
router_map[{1.2.3.4, 40}]["/"] -> default_route
